#pragma once

#include <list>

#include "YgorMisc.h"
#include "YgorMath.h"

//-----------------------------------------------------------------------------------------------------------------
//------------------------------------ TD03 Integer Pixel Coordinate ROIs -----------------------------------------
//-----------------------------------------------------------------------------------------------------------------
//THESE CONTOURS ARE FOR DCE-MRI UBC 3T TD03 patient and were done by hand by Hal around 20150328.
// The row<->col goof was fixed by swapping the first and second numbers in each 3-vector on 20150402.

contour_collection<double> cc_r_parotid_int_factory(void){
    //Patient's R parotid in integer pixel coordinates. (row,col,SliceLocation).
    std::list<std::string> contour_list({
        "{ contour closed 4 (147, 101, 24) (147, 97, 24) (150, 97, 24) (150, 102, 24)  }",
        "{ contour closed 5 (145, 95, 26) (149, 97, 26) (150, 101, 26) (146, 102, 26) (147, 98, 26)  }",
        "{ contour closed 6 (144, 94, 28) (148, 94, 28) (151, 97, 28) (149, 102, 28) (147, 100, 28) (146, 96, 28)  }",
        "{ contour closed 6 (145, 95, 30) (149, 93, 30) (152, 94, 30) (150, 100, 30) (148, 101, 30) (147, 97, 30)  }",
        "{ contour closed 10 (156, 93, 32) (155, 96, 32) (153, 99, 32) (149, 102, 32) (148, 101, 32) (148, 97, 32) (144, 93, 32) (144, 91, 32) (147, 94, 32) (152, 94, 32)  }",
        "{ contour closed 11 (156, 92, 34) (155, 95, 34) (156, 99, 34) (151, 101, 34) (148, 103, 34) (148, 99, 34) (148, 96, 34) (144, 94, 34) (144, 92, 34) (149, 91, 34) (153, 91, 34)  }",
        "{ contour closed 10 (157, 97, 36) (155, 100, 36) (149, 104, 36) (148, 102, 36) (149, 97, 36) (143, 94, 36) (146, 91, 36) (152, 91, 36) (156, 93, 36) (155, 96, 36)  }",
        "{ contour closed 10 (160, 98, 38) (155, 99, 38) (148, 105, 38) (149, 98, 38) (140, 92, 38) (146, 91, 38) (151, 90, 38) (155, 90, 38) (154, 93, 38) (156, 96, 38)  }",
        "{ contour closed 11 (162, 96, 40) (160, 99, 40) (157, 99, 40) (149, 104, 40) (147, 104, 40) (149, 98, 40) (138, 92, 40) (145, 90, 40) (153, 90, 40) (156, 94, 40) (157, 97, 40)  }",
        "{ contour closed 12 (162, 96, 42) (156, 100, 42) (152, 101, 42) (147, 104, 42) (148, 100, 42) (149, 98, 42) (140, 93, 42) (138, 92, 42) (145, 91, 42) (154, 90, 42) (157, 96, 42) (164, 95, 42)  }",
        "{ contour closed 16 (163, 95, 44) (160, 98, 44) (155, 100, 44) (151, 101, 44) (149, 103, 44) (148, 107, 44) (147, 108, 44) (146, 105, 44) (148, 101, 44) (149, 98, 44) (143, 95, 44) (137, 92, 44) (144, 91, 44) (151, 91, 44) (155, 91, 44) (158, 95, 44)  }",
        "{ contour closed 13 (163, 96, 46) (157, 99, 46) (151, 101, 46) (148, 104, 46) (148, 107, 46) (146, 106, 46) (147, 101, 46) (149, 98, 46) (147, 97, 46) (137, 93, 46) (145, 92, 46) (156, 91, 46) (157, 95, 46)  }",
        "{ contour closed 13 (163, 96, 48) (157, 98, 48) (151, 102, 48) (146, 107, 48) (144, 107, 48) (147, 100, 48) (148, 98, 48) (146, 97, 48) (136, 92, 48) (145, 91, 48) (155, 91, 48) (156, 93, 48) (161, 95, 48)  }",
        "{ contour closed 14 (163, 96, 50) (157, 98, 50) (152, 100, 50) (153, 103, 50) (150, 105, 50) (149, 102, 50) (145, 109, 50) (144, 105, 50) (147, 98, 50) (145, 97, 50) (136, 92, 50) (146, 91, 50) (154, 91, 50) (157, 94, 50)  }",
        "{ contour closed 17 (164, 95, 52) (156, 99, 52) (153, 100, 52) (153, 103, 52) (151, 105, 52) (149, 102, 52) (147, 105, 52) (146, 110, 52) (144, 111, 52) (144, 105, 52) (146, 100, 52) (147, 98, 52) (142, 94, 52) (135, 92, 52) (146, 91, 52) (157, 91, 52) (158, 94, 52)  }",
        "{ contour closed 17 (163, 95, 54) (156, 98, 54) (152, 104, 54) (149, 105, 54) (147, 104, 54) (146, 109, 54) (144, 108, 54) (145, 102, 54) (147, 97, 54) (144, 97, 54) (142, 94, 54) (136, 92, 54) (144, 92, 54) (149, 90, 54) (155, 90, 54) (158, 91, 54) (159, 94, 54)  }",
        "{ contour closed 16 (163, 94, 56) (155, 98, 56) (152, 102, 56) (150, 104, 56) (148, 103, 56) (145, 110, 56) (144, 108, 56) (145, 102, 56) (147, 98, 56) (144, 97, 56) (139, 92, 56) (135, 92, 56) (141, 91, 56) (148, 90, 56) (157, 90, 56) (158, 94, 56)  }",
        "{ contour closed 16 (163, 95, 58) (153, 100, 58) (154, 102, 58) (150, 104, 58) (148, 103, 58) (145, 110, 58) (144, 107, 58) (147, 98, 58) (144, 96, 58) (140, 93, 58) (133, 92, 58) (142, 91, 58) (146, 90, 58) (155, 89, 58) (158, 91, 58) (162, 94, 58)  }",
        "{ contour closed 18 (163, 94, 60) (158, 96, 60) (156, 98, 60) (153, 102, 60) (150, 104, 60) (147, 105, 60) (145, 111, 60) (143, 106, 60) (146, 98, 60) (144, 97, 60) (141, 95, 60) (134, 92, 60) (140, 91, 60) (144, 90, 60) (149, 89, 60) (155, 89, 60) (158, 90, 60) (158, 93, 60)  }",
        "{ contour closed 19 (162, 94, 62) (155, 98, 62) (155, 102, 62) (151, 102, 62) (148, 105, 62) (146, 109, 62) (144, 106, 62) (145, 102, 62) (146, 99, 62) (142, 96, 62) (138, 94, 62) (133, 92, 62) (140, 90, 62) (145, 88, 62) (147, 86, 62) (152, 87, 62) (156, 89, 62) (157, 92, 62) (161, 93, 62)  }",
        "{ contour closed 21 (162, 95, 64) (162, 92, 64) (157, 92, 64) (157, 90, 64) (157, 89, 64) (150, 86, 64) (146, 86, 64) (146, 88, 64) (140, 89, 64) (136, 91, 64) (133, 92, 64) (139, 94, 64) (140, 96, 64) (145, 96, 64) (146, 105, 64) (145, 108, 64) (148, 105, 64) (153, 102, 64) (156, 99, 64) (158, 96, 64) (162, 95, 64)  }",
        "{ contour closed 23 (133, 92, 66) (138, 89, 66) (140, 88, 66) (146, 86, 66) (153, 88, 66) (157, 89, 66) (157, 92, 66) (161, 93, 66) (156, 99, 66) (157, 101, 66) (155, 102, 66) (154, 101, 66) (151, 103, 66) (149, 104, 66) (146, 109, 66) (145, 104, 66) (146, 102, 66) (145, 99, 66) (146, 97, 66) (140, 97, 66) (140, 98, 66) (139, 95, 66) (134, 92, 66)  }",
        "{ contour closed 21 (133, 92, 68) (137, 91, 68) (139, 88, 68) (143, 86, 68) (149, 85, 68) (152, 86, 68) (155, 88, 68) (156, 90, 68) (158, 92, 68) (160, 94, 68) (156, 98, 68) (158, 100, 68) (152, 102, 68) (147, 105, 68) (147, 101, 68) (144, 101, 68) (144, 99, 68) (147, 97, 68) (147, 95, 68) (140, 97, 68) (138, 94, 68)  }",
        "{ contour closed 21 (156, 88, 70) (157, 91, 70) (160, 93, 70) (158, 96, 70) (157, 98, 70) (161, 99, 70) (155, 100, 70) (153, 99, 70) (150, 101, 70) (147, 104, 70) (146, 104, 70) (147, 101, 70) (141, 106, 70) (140, 105, 70) (147, 96, 70) (141, 95, 70) (140, 97, 70) (134, 92, 70) (140, 88, 70) (147, 86, 70) (155, 88, 70)  }",
        "{ contour closed 20 (141, 86, 72) (149, 85, 72) (153, 87, 72) (157, 91, 72) (159, 95, 72) (157, 98, 72) (161, 99, 72) (157, 100, 72) (152, 99, 72) (148, 104, 72) (147, 101, 72) (146, 100, 72) (143, 106, 72) (141, 105, 72) (143, 100, 72) (147, 96, 72) (145, 93, 72) (142, 95, 72) (133, 92, 72) (140, 87, 72)  }",
        "{ contour closed 25 (151, 86, 74) (144, 86, 74) (140, 86, 74) (136, 90, 74) (132, 91, 74) (136, 94, 74) (140, 94, 74) (145, 94, 74) (147, 97, 74) (145, 99, 74) (143, 101, 74) (142, 104, 74) (144, 105, 74) (147, 100, 74) (146, 104, 74) (149, 106, 74) (150, 102, 74) (153, 100, 74) (154, 98, 74) (157, 98, 74) (154, 89, 74) (158, 98, 74) (160, 96, 74) (158, 92, 74) (156, 89, 74)  }",
        "{ contour closed 13 (159, 96, 76) (156, 98, 76) (149, 101, 76) (147, 105, 76) (148, 98, 76) (145, 94, 76) (143, 91, 76) (140, 87, 76) (146, 86, 76) (151, 87, 76) (154, 89, 76) (156, 93, 76) (159, 95, 76)  }",
        "{ contour closed 17 (144, 88, 78) (144, 94, 78) (150, 96, 78) (148, 102, 78) (153, 99, 78) (159, 96, 78) (156, 95, 78) (153, 96, 78) (152, 94, 78) (154, 91, 78) (159, 86, 78) (162, 84, 78) (159, 78, 78) (154, 81, 78) (154, 87, 78) (151, 89, 78) (147, 89, 78)  }" });

    contour_collection<double> out;
    for(const auto &cs : contour_list){
        out.contours.emplace_back();
        if(!out.contours.back().load_from_string(cs)) FUNCERR("Failed to parse contour string. Cannot continue"); 
    }
    return std::move(out);
}


contour_collection<double> cc_l_parotid_int_factory(void){
    //Patient's L parotid in integer pixel coordinates. (row,col,SliceLocation).
    std::list<std::string> contour_list({
        "{ contour closed 6 (154, 162, 22) (154, 164, 22) (150, 167, 22) (148, 165, 22) (148, 163, 22) (151, 162, 22)  }",
        "{ contour closed 8 (155, 161, 24) (155, 164, 24) (153, 165, 24) (152, 167, 24) (147, 166, 24) (147, 164, 24) (149, 162, 24) (151, 160, 24)  }",
        "{ contour closed 8 (155, 161, 26) (155, 164, 26) (153, 168, 26) (150, 169, 26) (146, 168, 26) (147, 165, 26) (150, 163, 26) (151, 161, 26)  }",
        "{ contour closed 9 (145, 168, 28) (149, 165, 28) (151, 161, 28) (153, 159, 28) (155, 161, 28) (156, 165, 28) (156, 169, 28) (150, 170, 28) (146, 170, 28)  }",
        "{ contour closed 9 (156, 160, 30) (157, 165, 30) (154, 167, 30) (155, 169, 30) (145, 169, 30) (146, 167, 30) (149, 165, 30) (151, 163, 30) (152, 160, 30)  }",
        "{ contour closed 8 (156, 160, 32) (157, 169, 32) (141, 169, 32) (147, 166, 32) (150, 165, 32) (151, 162, 32) (149, 158, 32) (153, 159, 32)  }",
        "{ contour closed 10 (157, 160, 34) (157, 168, 34) (152, 169, 34) (143, 168, 34) (146, 166, 34) (150, 165, 34) (151, 161, 34) (149, 158, 34) (152, 157, 34) (154, 159, 34)  }",
        "{ contour closed 9 (157, 159, 36) (158, 163, 36) (157, 168, 36) (142, 168, 36) (146, 166, 36) (150, 165, 36) (152, 162, 36) (149, 158, 36) (153, 157, 36)  }",
        "{ contour closed 12 (159, 160, 38) (157, 164, 38) (157, 168, 38) (151, 168, 38) (140, 169, 38) (143, 167, 38) (149, 165, 38) (152, 161, 38) (149, 157, 38) (151, 156, 38) (154, 158, 38) (158, 159, 38)  }",
        "{ contour closed 12 (160, 159, 40) (157, 165, 40) (154, 168, 40) (142, 170, 40) (141, 168, 40) (144, 166, 40) (149, 165, 40) (152, 163, 40) (150, 157, 40) (150, 155, 40) (154, 157, 40) (157, 158, 40)  }",
        "{ contour closed 11 (160, 160, 42) (156, 166, 42) (154, 169, 42) (140, 169, 42) (141, 167, 42) (148, 165, 42) (151, 164, 42) (152, 162, 42) (149, 154, 42) (155, 157, 42) (159, 159, 42)  }",
        "{ contour closed 14 (161, 161, 44) (158, 163, 44) (155, 169, 44) (148, 169, 44) (147, 168, 44) (142, 169, 44) (139, 167, 44) (145, 166, 44) (150, 165, 44) (151, 162, 44) (149, 155, 44) (152, 156, 44) (156, 158, 44) (159, 159, 44)  }",
        "{ contour closed 13 (161, 162, 46) (157, 164, 46) (156, 169, 46) (150, 169, 46) (147, 169, 46) (139, 168, 46) (142, 166, 46) (148, 165, 46) (151, 163, 46) (148, 156, 46) (151, 155, 46) (155, 157, 46) (160, 159, 46)  }",
        "{ contour closed 14 (162, 162, 48) (157, 165, 48) (156, 169, 48) (153, 168, 48) (151, 170, 48) (148, 168, 48) (140, 170, 48) (137, 168, 48) (147, 166, 48) (150, 163, 48) (147, 151, 48) (150, 155, 48) (154, 156, 48) (161, 160, 48)  }",
        "{ contour closed 14 (162, 162, 50) (157, 167, 50) (156, 169, 50) (149, 169, 50) (137, 168, 50) (141, 166, 50) (147, 166, 50) (150, 163, 50) (149, 158, 50) (147, 151, 50) (150, 156, 50) (153, 155, 50) (155, 157, 50) (159, 159, 50)  }",
        "{ contour closed 15 (163, 162, 52) (159, 164, 52) (157, 169, 52) (157, 171, 52) (149, 170, 52) (137, 169, 52) (136, 168, 52) (147, 165, 52) (151, 163, 52) (148, 156, 52) (146, 151, 52) (149, 152, 52) (151, 156, 52) (155, 156, 52) (159, 159, 52)  }",
        "{ contour closed 15 (163, 162, 54) (157, 167, 54) (157, 171, 54) (149, 171, 54) (136, 168, 54) (148, 164, 54) (151, 162, 54) (148, 158, 54) (147, 153, 54) (146, 149, 54) (149, 150, 54) (150, 156, 54) (153, 156, 54) (157, 158, 54) (160, 160, 54)  }",
        "{ contour closed 15 (163, 162, 56) (158, 168, 56) (158, 171, 56) (150, 172, 56) (149, 171, 56) (136, 168, 56) (145, 165, 56) (149, 163, 56) (150, 161, 56) (147, 156, 56) (146, 150, 56) (149, 151, 56) (151, 156, 56) (155, 156, 56) (158, 159, 56)  }",
        "{ contour closed 19 (164, 163, 58) (161, 164, 58) (159, 170, 58) (153, 172, 58) (148, 172, 58) (137, 169, 58) (135, 168, 58) (143, 166, 58) (147, 163, 58) (150, 164, 58) (150, 161, 58) (146, 153, 58) (146, 150, 58) (149, 150, 58) (150, 154, 58) (151, 155, 58) (154, 156, 58) (157, 157, 58) (159, 160, 58)  }",
        "{ contour closed 17 (163, 163, 60) (160, 166, 60) (158, 171, 60) (149, 172, 60) (147, 172, 60) (137, 169, 60) (135, 168, 60) (140, 166, 60) (146, 163, 60) (148, 164, 60) (150, 162, 60) (149, 160, 60) (146, 152, 60) (149, 151, 60) (151, 155, 60) (156, 156, 60) (158, 159, 60)  }",
        "{ contour closed 22 (163, 164, 62) (160, 166, 62) (160, 171, 62) (155, 173, 62) (149, 173, 62) (145, 171, 62) (135, 169, 62) (135, 167, 62) (142, 165, 62) (145, 162, 62) (147, 165, 62) (149, 163, 62) (150, 161, 62) (148, 159, 62) (149, 157, 62) (146, 152, 62) (148, 151, 62) (150, 152, 62) (152, 155, 62) (156, 156, 62) (157, 158, 62) (161, 161, 62)  }",
        "{ contour closed 21 (164, 164, 64) (161, 166, 64) (159, 170, 64) (157, 172, 64) (151, 173, 64) (147, 173, 64) (143, 173, 64) (134, 168, 64) (141, 166, 64) (143, 164, 64) (148, 164, 64) (150, 161, 64) (147, 160, 64) (149, 158, 64) (148, 154, 64) (147, 151, 64) (150, 149, 64) (152, 154, 64) (155, 156, 64) (159, 158, 64) (162, 161, 64)  }",
        "{ contour closed 21 (133, 168, 66) (140, 166, 66) (146, 165, 66) (149, 161, 66) (147, 160, 66) (147, 159, 66) (145, 159, 66) (145, 155, 66) (149, 156, 66) (149, 151, 66) (151, 151, 66) (152, 156, 66) (159, 157, 66) (163, 164, 66) (159, 167, 66) (156, 173, 66) (152, 174, 66) (150, 176, 66) (148, 174, 66) (142, 172, 66) (136, 170, 66)  }",
        "{ contour closed 18 (160, 158, 68) (163, 164, 68) (159, 167, 68) (159, 172, 68) (158, 174, 68) (150, 171, 68) (148, 173, 68) (142, 173, 68) (141, 171, 68) (133, 168, 68) (142, 165, 68) (144, 166, 68) (150, 162, 68) (147, 159, 68) (144, 156, 68) (146, 155, 68) (149, 156, 68) (153, 156, 68)  }",
        "{ contour closed 22 (161, 157, 70) (162, 162, 70) (160, 168, 70) (164, 172, 70) (164, 175, 70) (154, 173, 70) (151, 171, 70) (149, 173, 70) (144, 174, 70) (140, 173, 70) (132, 168, 70) (142, 165, 70) (145, 166, 70) (150, 162, 70) (147, 160, 70) (145, 158, 70) (145, 155, 70) (149, 155, 70) (150, 152, 70) (153, 154, 70) (153, 156, 70) (158, 156, 70)  }",
        "{ contour closed 24 (163, 157, 72) (163, 161, 72) (160, 167, 72) (162, 171, 72) (165, 173, 72) (163, 175, 72) (158, 175, 72) (153, 170, 72) (148, 174, 72) (144, 175, 72) (139, 173, 72) (133, 168, 72) (141, 165, 72) (144, 168, 72) (149, 163, 72) (150, 161, 72) (147, 160, 72) (146, 159, 72) (147, 156, 72) (150, 157, 72) (150, 153, 72) (154, 154, 72) (154, 157, 72) (157, 156, 72)  }",
        "{ contour closed 22 (163, 158, 74) (162, 163, 74) (159, 166, 74) (161, 171, 74) (158, 172, 74) (154, 169, 74) (148, 169, 74) (148, 175, 74) (142, 174, 74) (138, 170, 74) (133, 168, 74) (140, 166, 74) (144, 162, 74) (145, 167, 74) (148, 165, 74) (150, 161, 74) (148, 159, 74) (147, 155, 74) (151, 156, 74) (153, 153, 74) (155, 157, 74) (158, 158, 74)  }",
        "{ contour closed 23 (163, 158, 76) (163, 162, 76) (160, 163, 76) (159, 168, 76) (155, 169, 76) (149, 169, 76) (147, 175, 76) (142, 175, 76) (140, 173, 76) (136, 169, 76) (142, 166, 76) (144, 164, 76) (144, 168, 76) (147, 169, 76) (149, 165, 76) (152, 159, 76) (146, 153, 76) (148, 152, 76) (150, 154, 76) (152, 152, 76) (154, 153, 76) (154, 157, 76) (159, 159, 76)  }",
        "{ contour closed 16 (161, 159, 78) (161, 163, 78) (156, 162, 78) (152, 166, 78) (148, 170, 78) (146, 175, 78) (142, 174, 78) (145, 171, 78) (147, 167, 78) (151, 162, 78) (150, 157, 78) (146, 153, 78) (150, 153, 78) (153, 155, 78) (155, 158, 78) (158, 158, 78)  }"});

    contour_collection<double> out;
    for(const auto &cs : contour_list){
        out.contours.emplace_back();
        if(!out.contours.back().load_from_string(cs)) FUNCERR("Failed to parse contour string. Cannot continue"); 
    }
    return std::move(out);
}

contour_collection<double> cc_r_masseter_int_factory(void){
    //Patient's R masseter in integer pixel coordinates. (row,col,SliceLocation).
    std::list<std::string> contour_list({
        "{ contour closed 4 (130, 99, 26) (133, 96, 26) (136, 98, 26) (132, 101, 26)  }",
        "{ contour closed 6 (127, 101, 28) (130, 97, 28) (135, 96, 28) (136, 98, 28) (133, 100, 28) (130, 102, 28)  }",
        "{ contour closed 8 (126, 102, 30) (125, 99, 30) (129, 96, 30) (133, 94, 30) (137, 94, 30) (137, 99, 30) (131, 101, 30) (129, 103, 30)  }",
        "{ contour closed 10 (124, 100, 32) (127, 96, 32) (131, 94, 32) (138, 94, 32) (143, 96, 32) (141, 98, 32) (137, 100, 32) (133, 101, 32) (132, 103, 32) (128, 103, 32)  }",
        "{ contour closed 11 (124, 100, 34) (126, 97, 34) (130, 94, 34) (135, 93, 34) (140, 94, 34) (142, 97, 34) (137, 99, 34) (134, 100, 34) (132, 105, 34) (129, 105, 34) (126, 102, 34)  }",
        "{ contour closed 9 (123, 101, 36) (125, 97, 36) (128, 94, 36) (135, 94, 36) (140, 95, 36) (141, 98, 36) (136, 99, 36) (133, 103, 36) (127, 104, 36)  }",
        "{ contour closed 8 (123, 100, 38) (127, 95, 38) (132, 94, 38) (139, 95, 38) (140, 98, 38) (135, 100, 38) (131, 104, 38) (126, 104, 38)  }",
        "{ contour closed 9 (123, 103, 40) (124, 98, 40) (127, 94, 40) (133, 93, 40) (140, 95, 40) (143, 98, 40) (137, 100, 40) (130, 102, 40) (127, 104, 40)  }",
        "{ contour closed 10 (122, 103, 42) (123, 98, 42) (126, 95, 42) (131, 93, 42) (137, 94, 42) (142, 96, 42) (137, 98, 42) (134, 102, 42) (128, 103, 42) (125, 104, 42)  }",
        "{ contour closed 11 (122, 102, 44) (123, 97, 44) (127, 95, 44) (133, 94, 44) (139, 95, 44) (142, 97, 44) (137, 99, 44) (134, 102, 44) (129, 103, 44) (127, 105, 44) (125, 103, 44)  }",
        "{ contour closed 9 (121, 102, 46) (123, 96, 46) (128, 95, 46) (134, 94, 46) (138, 100, 46) (135, 103, 46) (132, 103, 46) (128, 104, 46) (126, 104, 46)  }",
        "{ contour closed 9 (121, 102, 48) (123, 97, 48) (127, 95, 48) (134, 94, 48) (138, 98, 48) (136, 102, 48) (130, 102, 48) (126, 104, 48) (124, 105, 48)  }",
        "{ contour closed 8 (120, 102, 50) (122, 97, 50) (127, 94, 50) (132, 94, 50) (140, 96, 50) (135, 98, 50) (131, 101, 50) (125, 103, 50)  }",
        "{ contour closed 8 (119, 102, 52) (120, 97, 52) (127, 94, 52) (134, 94, 52) (140, 96, 52) (133, 99, 52) (129, 102, 52) (122, 104, 52)  }",
        "{ contour closed 9 (119, 103, 54) (119, 98, 54) (125, 95, 54) (132, 95, 54) (140, 95, 54) (138, 98, 54) (132, 99, 54) (129, 102, 54) (123, 104, 54)  }",
        "{ contour closed 8 (118, 103, 56) (120, 98, 56) (125, 94, 56) (133, 94, 56) (139, 96, 56) (132, 98, 56) (130, 102, 56) (123, 103, 56)  }",
        "{ contour closed 8 (118, 103, 58) (119, 97, 58) (126, 94, 58) (133, 94, 58) (139, 96, 58) (133, 97, 58) (131, 102, 58) (123, 103, 58)  }",
        "{ contour closed 8 (118, 103, 60) (118, 98, 60) (124, 94, 60) (131, 94, 60) (137, 95, 60) (132, 97, 60) (129, 101, 60) (122, 102, 60)  }",
        "{ contour closed 7 (117, 103, 62) (118, 98, 62) (123, 95, 62) (130, 94, 62) (131, 101, 62) (125, 102, 62) (122, 103, 62)  }",
        "{ contour closed 7 (116, 103, 64) (119, 97, 64) (123, 94, 64) (136, 95, 64) (132, 99, 64) (129, 102, 64) (119, 103, 64)  }",
        "{ contour closed 8 (114, 102, 66) (121, 94, 66) (121, 93, 66) (134, 95, 66) (137, 98, 66) (132, 100, 66) (125, 102, 66) (117, 103, 66)  }",
        "{ contour closed 8 (114, 101, 68) (121, 95, 68) (128, 94, 68) (135, 96, 68) (136, 98, 68) (129, 100, 68) (123, 101, 68) (118, 101, 68)  }",
        "{ contour closed 8 (116, 100, 70) (120, 96, 70) (123, 94, 70) (131, 95, 70) (136, 97, 70) (132, 99, 70) (124, 100, 70) (120, 100, 70)  }",
        "{ contour closed 8 (116, 98, 72) (121, 95, 72) (128, 94, 72) (135, 96, 72) (139, 98, 72) (132, 100, 72) (123, 101, 72) (120, 101, 72)  }",
        "{ contour closed 6 (120, 100, 74) (117, 98, 74) (120, 95, 74) (128, 95, 74) (135, 97, 74) (127, 99, 74)  }",
        "{ contour closed 8 (119, 100, 76) (116, 97, 76) (119, 95, 76) (127, 94, 76) (134, 95, 76) (135, 97, 76) (127, 98, 76) (123, 99, 76)  }",
        "{ contour closed 10 (139, 96, 78) (137, 99, 78) (130, 99, 78) (123, 99, 78) (120, 100, 78) (118, 97, 78) (119, 95, 78) (124, 94, 78) (131, 94, 78) (137, 95, 78)  }"});

    contour_collection<double> out;
    for(const auto &cs : contour_list){
        out.contours.emplace_back();
        if(!out.contours.back().load_from_string(cs)) FUNCERR("Failed to parse contour string. Cannot continue"); 
    }
    return std::move(out);
}

contour_collection<double> cc_pharynx_int_factory(void){
    //Patient's pharynx in integer pixel coordinates. (row,col,SliceLocation).
    std::list<std::string> contour_list({
        "{ contour closed 11 (133, 128, 0) (140, 120, 0) (149, 118, 0) (151, 122, 0) (149, 126, 0) (149, 133, 0) (152, 134, 0) (149, 140, 0) (142, 139, 0) (136, 137, 0) (133, 132, 0)  }",
        "{ contour closed 10 (141, 116, 10) (143, 125, 10) (144, 133, 10) (142, 140, 10) (145, 142, 10) (150, 139, 10) (152, 133, 10) (150, 127, 10) (151, 123, 10) (145, 117, 10)  }",
        "{ contour closed 11 (142, 115, 12) (142, 124, 12) (144, 127, 12) (145, 133, 12) (143, 139, 12) (145, 143, 12) (150, 141, 12) (153, 134, 12) (151, 129, 12) (152, 124, 12) (145, 117, 12)  }",
        "{ contour closed 11 (141, 119, 14) (144, 115, 14) (149, 119, 14) (151, 127, 14) (152, 134, 14) (149, 141, 14) (145, 143, 14) (144, 138, 14) (145, 132, 14) (144, 125, 14) (143, 122, 14)  }",
        "{ contour closed 10 (142, 120, 16) (142, 117, 16) (147, 118, 16) (151, 125, 16) (151, 133, 16) (150, 140, 16) (146, 142, 16) (144, 139, 16) (145, 131, 16) (145, 125, 16)  }",
        "{ contour closed 10 (144, 123, 18) (142, 118, 18) (149, 118, 18) (150, 125, 18) (151, 133, 18) (149, 141, 18) (145, 144, 18) (143, 141, 18) (145, 135, 18) (143, 127, 18)  }",
        "{ contour closed 9 (135, 129, 2) (139, 120, 2) (147, 118, 2) (150, 122, 2) (150, 129, 2) (150, 136, 2) (148, 141, 2) (141, 139, 2) (135, 133, 2)  }",
        "{ contour closed 10 (145, 127, 20) (146, 124, 20) (143, 118, 20) (147, 118, 20) (151, 124, 20) (149, 130, 20) (151, 130, 20) (149, 143, 20) (143, 142, 20) (146, 132, 20)  }",
        "{ contour closed 13 (145, 129, 22) (147, 122, 22) (143, 119, 22) (146, 117, 22) (149, 119, 22) (150, 123, 22) (148, 127, 22) (150, 129, 22) (150, 142, 22) (145, 145, 22) (144, 142, 22) (147, 137, 22) (146, 132, 22)  }",
        "{ contour closed 14 (146, 126, 24) (145, 121, 24) (142, 119, 24) (143, 116, 24) (147, 118, 24) (150, 121, 24) (149, 124, 24) (150, 129, 24) (150, 140, 24) (146, 144, 24) (143, 143, 24) (145, 139, 24) (147, 134, 24) (145, 130, 24)  }",
        "{ contour closed 17 (141, 125, 26) (145, 125, 26) (143, 122, 26) (142, 116, 26) (147, 119, 26) (149, 122, 26) (148, 126, 26) (146, 128, 26) (148, 130, 26) (150, 135, 26) (149, 140, 26) (146, 143, 26) (143, 143, 26) (144, 140, 26) (146, 136, 26) (144, 132, 26) (141, 131, 26)  }",
        "{ contour closed 18 (143, 126, 28) (146, 125, 28) (143, 119, 28) (142, 117, 28) (146, 118, 28) (150, 122, 28) (148, 126, 28) (145, 128, 28) (148, 131, 28) (150, 136, 28) (148, 141, 28) (146, 144, 28) (143, 143, 28) (145, 140, 28) (146, 136, 28) (147, 133, 28) (143, 132, 28) (142, 129, 28)  }",
        "{ contour closed 16 (143, 127, 30) (146, 124, 30) (142, 116, 30) (147, 118, 30) (150, 123, 30) (147, 127, 30) (145, 129, 30) (148, 131, 30) (150, 135, 30) (148, 141, 30) (144, 144, 30) (143, 144, 30) (144, 141, 30) (145, 137, 30) (145, 132, 30) (142, 129, 30)  }",
        "{ contour closed 15 (143, 127, 32) (146, 124, 32) (142, 117, 32) (144, 116, 32) (149, 123, 32) (145, 129, 32) (149, 134, 32) (150, 138, 32) (147, 142, 32) (146, 145, 32) (143, 145, 32) (143, 142, 32) (145, 138, 32) (145, 133, 32) (142, 130, 32)  }",
        "{ contour closed 17 (142, 143, 34) (143, 139, 34) (145, 136, 34) (141, 130, 34) (141, 127, 34) (144, 126, 34) (145, 123, 34) (141, 116, 34) (144, 116, 34) (149, 123, 34) (146, 124, 34) (145, 128, 34) (145, 131, 34) (149, 135, 34) (148, 140, 34) (146, 143, 34) (144, 145, 34)  }",
        "{ contour closed 20 (144, 116, 36) (149, 123, 36) (147, 124, 36) (146, 127, 36) (143, 128, 36) (146, 132, 36) (148, 135, 36) (150, 138, 36) (147, 141, 36) (145, 142, 36) (145, 145, 36) (142, 145, 36) (141, 142, 36) (143, 139, 36) (145, 137, 36) (141, 131, 36) (140, 127, 36) (144, 126, 36) (144, 122, 36) (140, 116, 36)  }",
        "{ contour closed 7 (140, 116, 38) (147, 119, 38) (149, 123, 38) (145, 128, 38) (144, 130, 38) (146, 134, 38) (147, 137, 38)  }",
        "{ contour closed 12 (135, 127, 4) (141, 119, 4) (146, 118, 4) (150, 122, 4) (151, 125, 4) (149, 129, 4) (151, 132, 4) (151, 136, 4) (147, 139, 4) (143, 140, 4) (137, 137, 4) (135, 133, 4)  }",
        "{ contour closed 11 (142, 119, 6) (148, 121, 6) (151, 124, 6) (148, 128, 6) (151, 131, 6) (151, 136, 6) (147, 140, 6) (144, 139, 6) (142, 134, 6) (143, 128, 6) (142, 123, 6)  }",
        "{ contour closed 12 (142, 124, 8) (142, 117, 8) (147, 119, 8) (151, 122, 8) (150, 127, 8) (149, 130, 8) (152, 134, 8) (151, 138, 8) (148, 140, 8) (144, 140, 8) (143, 136, 8) (143, 129, 8)  }" });

    contour_collection<double> out;
    for(const auto &cs : contour_list){
        out.contours.emplace_back();
        if(!out.contours.back().load_from_string(cs)) FUNCERR("Failed to parse contour string. Cannot continue"); 
    }
    return std::move(out);
}

